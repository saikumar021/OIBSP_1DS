# -*- coding: utf-8 -*-
"""Classification using iris dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UpplOeo_8hvTvMe8K5ZM8RH_fK3x7lK5
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import warnings 
warnings.filterwarnings('ignore')
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
sns.set(style="white" , color_codes=True)

#Displaying the starting rows of data
df=pd.read_csv("/Iris.csv")
df.head()

#count of number of flowers present in the data in each type
df["Species"].value_counts()

#ploting using seaborn
sns.FacetGrid(df,hue="Species",height=6).map(plt.scatter,"PetalLengthCm", "SepalWidthCm").add_legend()

#converting categorical values into numbers
flower_mapping={'Iris-setosa': 0,'Iris-versicolor':1,'Iris-virginica':2}
df["Species"]=df["Species"].map(flower_mapping)

df.head()

#taking dependent and independent values
x=df.iloc[:,1:6].values
y=df.iloc[:,-1].values
print(x)
print(y)

#splitting the data into training and testing data
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 0)
print(x_train)

print(x_test)

print(y_train)

print(y_test)

#LogisticRegression
from sklearn.linear_model import LogisticRegression
regression=LogisticRegression()

regression.fit(x_train,y_train)

#checking the accuracy of the model
accuracy=regression.score(x_test,y_test)
accuracy

#prediction
y_pred=regression.predict(x_test)
dataset=pd.DataFrame({'Actual' : y_test,'predicted' : y_pred })
dataset

#training the model using the SUPPORT VECTOR MACHINE
from sklearn import svm

clf = svm.SVC(kernel='linear')

clf.fit(x_train, y_train)

y_pred = clf.predict(x_test)

from sklearn.metrics import accuracy_score
acc = clf.score(x_train, y_train)
acc

from sklearn import metrics
print(metrics.classification_report(y_test,y_pred))

print(metrics.confusion_matrix(y_test,y_pred))

